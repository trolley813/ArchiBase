@page "/series"
@using Microsoft.EntityFrameworkCore
@inject ModelContext ModelContext
@inject IStringLocalizer<Index> Loc

<RadzenText TextStyle="TextStyle.H3">@Loc["Designs"]</RadzenText>

<RadzenLink Text=@Loc["Add design"] Icon="add_circle_outline" Path="series/add" />

<RadzenText TextStyle="TextStyle.H5">@Loc["Search"]</RadzenText>


<RadzenTextBox Placeholder=@Loc["Enter name or catalogue ID"] @bind-Value="searchTerms" />
<RadzenButton Icon="search" Click="OnSearch" />

<RadzenDataList Data="searchResults">
    <Template Context="design">
        <RadzenLink Path="@($"series/{design.Id}")"
            Text="@($"{design.Name} ({String.Join(" Â· ", design.CatalogueEntries.OrderBy(e => (e.Catalogue.Id, e.Code)).Select(e => e.Formatted))})")" />
    </Template>
</RadzenDataList>

@code
{
    IEnumerable<Design> searchResults;

    string searchTerms = "";

    public void OnSearch()
    {
        searchResults = ModelContext.Designs
        .Include(d => d.CatalogueEntries)
        .ThenInclude(e => e.Catalogue).ToList()
        .Where(d => d.Name.Contains(searchTerms, StringComparison.OrdinalIgnoreCase) || d.CatalogueEntries.Any(e =>
        e.Code.Contains(searchTerms, StringComparison.OrdinalIgnoreCase)));
    }
}