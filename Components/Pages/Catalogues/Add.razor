@page "/catalogues/add"
@using ArchiBase.Models
@using ArchiBase.Data
@inject ModelContext ModelContext
@inject NotificationService NotificationService

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized Context="ctx">
            <RadzenText TextStyle="TextStyle.H3">Create new</RadzenText>
            <RadzenTemplateForm Data="@cat" TItem="DesignCatalogue" Submit="(DesignCatalogue c) => { CreateNew(c); }">
                <RadzenStack Orientation="Orientation.Vertical">

                    <RadzenFormField Text="Name">
                        <RadzenTextBox @bind-Value="@cat.Name" />
                    </RadzenFormField>
                    <RadzenFormField Text="Description">
                        <RadzenHtmlEditor @bind-Value="@cat.Description" style="height: 300px;" />
                    </RadzenFormField>
                    <RadzenFormField Text="Abbreviated Format">
                        <RadzenTextBox Name="Abbr" @bind-Value="@cat.AbbreviatedFormat" />
                        <RadzenRegexValidator Component="Abbr" Text="Format must include {Code} placeholder"
                            Pattern="\{Code\}">
                        </RadzenRegexValidator>
                    </RadzenFormField>
                    <RadzenFormField>
                        <RadzenButton ButtonType="ButtonType.Submit" Text="Submit" Icon="add_circle_outline" />
                    </RadzenFormField>
                </RadzenStack>
            </RadzenTemplateForm>
        </Authorized>
        <NotAuthorized>
            <RadzenAlert AllowClose="false" Title="Unauthorized" AlertStyle="AlertStyle.Danger" Variant="Variant.Flat"
                Shade="Shade.Lighter">
                To create or edit items, you must be authorized as admin/editor.
                <RadzenLink Path="login" Text="Log in" />
            </RadzenAlert>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>
@code
{
    string name = "", description = "", abbreviatedFormat = "";

    DesignCatalogue cat = new();

    void CreateNew(DesignCatalogue catalogue)
    {
        ModelContext.DesignCatalogues.Add(catalogue);
        try
        {
            ModelContext.SaveChanges();
            NotificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Catalogue added",
                    Detail = $"ID: {catalogue.Id}"
                });
        }
        catch (Exception e)
        {
            NotificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error occured",
                    Detail = $"{e.Message}"
                });
        }
    }
}