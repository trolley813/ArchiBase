@using System.Globalization
@inject NavigationManager Nav
@inject IWebHostEnvironment Env

<RadzenRow AlignItems="AlignItems.Center" Gap="10">
    <RadzenText>Select language:</RadzenText>
    <RadzenDropDown @bind-Value="Culture" Data="supportedCultures" TValue="CultureInfo">
        <Template Context="culture">
            <RadzenStack Orientation="Orientation.Horizontal" Gap="10">
                <img src=@(IconName(culture)) width="16px" />
                <RadzenText>@culture.DisplayName</RadzenText>
            </RadzenStack>
        </Template>
    </RadzenDropDown>
</RadzenRow>

@code
{
    private CultureInfo[] supportedCultures = new[]
    {
new CultureInfo("en-US"),
new CultureInfo("ru-RU"),
new CultureInfo("et-EE"),
new CultureInfo("pl-PL"),
new CultureInfo("be-BY"),
new CultureInfo("de-DE"),
};

    protected override void OnInitialized()
    {
        Culture = CultureInfo.CurrentCulture;
    }

    private CultureInfo Culture
    {
        get => CultureInfo.CurrentCulture;
        set
        {
            if (CultureInfo.CurrentCulture != value)
            {
                var uri = new Uri(Nav.Uri)
                .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
                var cultureEscaped = Uri.EscapeDataString(value.Name);
                var uriEscaped = Uri.EscapeDataString(uri);

                Nav.NavigateTo(
                $"account/setculture?culture={cultureEscaped}&redirectUri={uriEscaped}",
                forceLoad: true);
            }
        }
    }

    private string IconName(CultureInfo? culture)
    {
        if (culture is null) return string.Empty;
        var wwwroot = Env.WebRootPath;
        string path = $"flags/language/{culture.ToString().ToLowerInvariant()}.svg";
        if (System.IO.File.Exists(Path.Combine(wwwroot, path))) return path;
        return $"flags/language/{culture.TwoLetterISOLanguageName}.svg";
    }
}