@inject IStringLocalizer<NavMenu> Loc
@inject IHttpClientFactory ClientFactory

<LanguageTrackProvider OnInitializeEvent="provider => provider.RegisterComponent(this)" />
<RadzenPanelMenu>
    <RadzenPanelMenuItem Text=@Loc["Home"] Icon="home" Path="" />
    <RadzenPanelMenuItem Text=@Loc["News"] Icon="news" Path="news" />
    <RadzenPanelMenuItem Text=@Loc["Rules"] Icon="rule" Path="rules" />
    <RadzenPanelMenuItem Text=@Loc["Locations"] Icon="location_city" Path="locations" />
    <RadzenPanelMenuItem Text=@Loc["Catalogues"] Icon="menu_book" Path="catalogues" />
    <RadzenPanelMenuItem Text=@Loc["Series and Designs"] Icon="architecture" Path="series">
        <RadzenPanelMenuItem Text=@Loc["Categories"] Icon="category" Path="categories" />
    </RadzenPanelMenuItem>
    <RadzenPanelMenuItem Text=@Loc["Architects"] Icon="id_card" Path="architects" />
    <RadzenPanelMenuItem Text=@Loc["Comments"] Icon="comment" Path="comments">
        <CascadingAuthenticationState>
            <AuthorizeView>
                <RadzenPanelMenuItem Icon="mark_unread_chat_alt" Path="comments/new">
                    <Template>
                        @Loc["New"]&emsp;
                        <RadzenBadge IsPill=true Text=@(newCount.ToString()) />
                    </Template>
                </RadzenPanelMenuItem>
                <RadzenPanelMenuItem Icon="reviews" Path="comments/responses">
                    <Template>
                        @Loc["Responses"]&emsp;
                        <RadzenBadge IsPill=true Text=@(responsesCount.ToString()) />
                    </Template>
                </RadzenPanelMenuItem>
            </AuthorizeView>
        </CascadingAuthenticationState>
    </RadzenPanelMenuItem>
    <RadzenPanelMenuItem Text=@Loc["Photos"] Icon="photo_camera" Path="photos">
        <RadzenPanelMenuItem Text=@Loc["Upload photo"] Icon="upload" Path="photos/upload" />
    </RadzenPanelMenuItem>
    <RadzenPanelMenuItem Text=@Loc["Editorial board"] Icon="groups" Path="editorial" />
    <RadzenPanelMenuItem Text=@Loc["Pages"] Icon="description" Path="pages" />
    <RadzenPanelMenuItem Text=@Loc["Galleries"] Icon="collections_bookmark" Path="galleries" />
    <EditorOnly ShowAlert=false>
        <RadzenPanelMenuItem Text=@Loc["For editors"] Icon="design_services">
            <RadzenPanelMenuItem Text=@Loc["Bulk editing"]>
                <RadzenPanelMenuItem Text=@Loc["Split designs"] Path="series/split" />
                <RadzenPanelMenuItem Text=@Loc["Split categories"] Path="categories/split" />
                <RadzenPanelMenuItem Text=@Loc["Merge streets"] Path="bulkedit/mergestreets" />
            </RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text=@Loc["Conversions"]>
                <RadzenPanelMenuItem Text=@Loc["Design to category"] Path="convert/designtocategory" />
                <RadzenPanelMenuItem Text=@Loc["Category to design"] Path="convert/categorytodesign" />
            </RadzenPanelMenuItem>
        </RadzenPanelMenuItem>
    </EditorOnly>
    <PhotoModOnly ShowAlert=false>
        <RadzenPanelMenuItem Text=@Loc["For photo moderators"] Icon="shield">
            <RadzenPanelMenuItem Text=@Loc["Photo queue"] Icon="photo_library" Path="queue" />
        </RadzenPanelMenuItem>
    </PhotoModOnly>
</RadzenPanelMenu>

@code
{
    int newCount, responsesCount;

    override protected async Task OnInitializedAsync()
    {
        using var client = ClientFactory.CreateClient();
        newCount = await client.GetFromJsonAsyncExtended<int>("/api/comments/new/count");
        responsesCount = await client.GetFromJsonAsyncExtended<int>("/api/comments/responses/count");
    }
}